<style lang="less">
.background {
  width: 100%;
  height: 560px;
  background-color: #FFFFFF
}
.top {
  height: 30px;
  width: 100%;
  background-color: #FFFFFF
}
.flex {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  // margin-top: 30px
}

.box {
  height: 150px;
  width: 100%;
}

.backgroundcat {
  width: 340px;
  height: 80px;
  background-color: #F8F8F8
}

.line {
  width: 340px;
  border: 1px solid #FFFFFF
}

.border {
  height: 55px;
  width: 340px;
  border-radius: 5px;
  border: 1px solid #F8F8F8
}

.circle {
  height: 70px;
  width: 70px;
  border-radius: 50%;
}

.flex-cat {
  display: flex;
  justify-content: flex-start;
  align-items: center;
}

.distance {
  margin: 5px 10px 5px 15px
}

.distance-cat {
  margin-top: 50px;
  margin-left: 15px;
  margin-right: 10px;
}

.distance-email {
  margin-left: 15px;
  margin-right: 10px
}

.space {
  margin-left: 176px;
}

.interval {
  margin-left: 184px;
}

.icon {
  height: 25px;
  width: 25px;
  border-radius: 50%;
  border: 1px solid #F8F8F8
}
.word {
  font-size: 15px
}
.flex-text {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center
}
::-webkit-scrollbar {
  width: 0;
  height: 0;
  color: transparent;
}
</style>

<template>
  <view>
    <view class="background">
      <view class="top"></view>
      <view class="flex box">
        <image @tap="click" class="circle" src="{{avatarUrl}}"></image>
        <text class="word">{{nickName}}</text>
      </view>
      <view @tap="github" class="flex-cat distance-cat">
        <view class="backgroundcat flex-cat border">
          <image class="icon distance" src="{{cat}}"></image>
          <view class="flex-text">
            <text class="word">My Github</text>
          </view>  
          <image class="icon space" src="{{symbol}}"></image>
        </view>
      </view>
      <view class="line"></view>
      <view @tap="email" class="flex-cat distance-email">
        <view class="backgroundcat flex-cat border">
          <image class="icon distance" src="{{email}}"></image>
          <text class="word">My Email</text>
          <image class="icon interval" src="{{sign}}"></image>
        </view>
      </view>
      <view>
        <text @tap="onShareAppMessage"></text>
      </view>  
    </view>
  </view>    
</template>


<script>
import wepy from 'wepy'

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '我的'
  }
  data = {
    avatarUrl: '../image/WechatIMG12.jpeg',
    nickName: 'A∞(华健)',
    cat: '../image/github-3.png',
    symbol: '../image/下一步.png',
    email: '../image/邮件.png',
    sign: '../image/下一步.png',
    height: 0,
    width: 0
  }
  methods = {
    github() {
      wepy.setClipboardData({
        data: 'http://github.com/wanghuajian620',
        success: function(res) {
          wepy.showActionSheet({
            itemList: ['http://github.com/wanghuajian620'],
            success: function(res) {
              if (res.tapIndex === 0) {
                wepy.showModal({
                  title: '提示',
                  content: '复制成功',
                  showCancel: false
                })
              }
            }
          })
        }
      })
    },
    email() {
      wepy.setClipboardData({
        data: 'sunshineboy_1026@163.com',
        success: function(res) {
          wepy.showActionSheet({
            itemList: ['sunshineboy_1026@163.com'],
            success: function(res) {
              if (res.tapIndex === 0) {
                wepy.showModal({
                  title: '提示',
                  content: '复制成功',
                  showCancel: false
                })
              }
            }
          })
        }
      })
    },
    click() {
      wepy.previewImage({
        current: '',
        urls: ['../image/WechatIMG12.jpeg']
      })
    },
    onShareAppMessage() {
      return {
        title: '博客',
        path: '/pages/me'
      }
    }
  }
  onLoad() {
    let self = this
    wepy.getSystemInfo({
      success(res) {
        self.height = res.windowHeight
        self.width = res.windowWidth
      }
    })
  }
}
</script>
