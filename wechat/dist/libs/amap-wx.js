"use strict";

function AMapWX(a) {
  this.key = a.key, this.requestConfig = { key: a.key, s: "rsx", platform: "WXJS", appname: a.key, sdkversion: "1.2.0", logversion: "2.0" };
}AMapWX.prototype.getWxLocation = function (a, b) {
  wx.getLocation({ type: "gcj02", success: function success(a) {
      var c = a.longitude + "," + a.latitude;wx.setStorage({ key: "userLocation", data: c }), b(c);
    }, fail: function fail(c) {
      wx.getStorage({ key: "userLocation", success: function success(a) {
          a.data && b(a.data);
        } }), a.fail({ errCode: "0", errMsg: c.errMsg || "" });
    } });
}, AMapWX.prototype.getRegeo = function (a) {
  function c(c) {
    var d = b.requestConfig;wx.request({ url: "https://restapi.amap.com/v3/geocode/regeo", data: { key: b.key, location: c, extensions: "all", s: d.s, platform: d.platform, appname: b.key, sdkversion: d.sdkversion, logversion: d.logversion }, method: "GET", header: { "content-type": "application/json" }, success: function success(b) {
        var d, e, f, g, h, i, j, k, l;b.data.status && "1" == b.data.status ? (d = b.data.regeocode, e = d.addressComponent, f = [], g = "", d && d.roads[0] && d.roads[0].name && (g = d.roads[0].name + "附近"), h = c.split(",")[0], i = c.split(",")[1], d.pois && d.pois[0] && (g = d.pois[0].name + "附近", j = d.pois[0].location, j && (h = parseFloat(j.split(",")[0]), i = parseFloat(j.split(",")[1]))), e.provice && f.push(e.provice), e.city && f.push(e.city), e.district && f.push(e.district), e.streetNumber && e.streetNumber.street && e.streetNumber.number ? (f.push(e.streetNumber.street), f.push(e.streetNumber.number)) : (k = "", d && d.roads[0] && d.roads[0].name && (k = d.roads[0].name), f.push(k)), f = f.join(""), l = [{ iconPath: a.iconPath, width: a.iconWidth, height: a.iconHeight, name: f, desc: g, longitude: h, latitude: i, id: 0, regeocodeData: d }], a.success(l)) : a.fail({ errCode: b.data.infocode, errMsg: b.data.info });
      }, fail: function fail(b) {
        a.fail({ errCode: "0", errMsg: b.errMsg || "" });
      } });
  }var b = this;a.location ? c(a.location) : b.getWxLocation(a, function (a) {
    c(a);
  });
}, AMapWX.prototype.getWeather = function (a) {
  function d(d) {
    var e = "base";a.type && "forecast" == a.type && (e = "all"), wx.request({ url: "https://restapi.amap.com/v3/weather/weatherInfo", data: { key: b.key, city: d, extensions: e, s: c.s, platform: c.platform, appname: b.key, sdkversion: c.sdkversion, logversion: c.logversion }, method: "GET", header: { "content-type": "application/json" }, success: function success(b) {
        function c(a) {
          var b = { city: { text: "城市", data: a.city }, weather: { text: "天气", data: a.weather }, temperature: { text: "温度", data: a.temperature }, winddirection: { text: "风向", data: a.winddirection + "风" }, windpower: { text: "风力", data: a.windpower + "级" }, humidity: { text: "湿度", data: a.humidity + "%" } };return b;
        }var d, e;b.data.status && "1" == b.data.status ? b.data.lives ? (d = b.data.lives, d && d.length > 0 && (d = d[0], e = c(d), e["liveData"] = d, a.success(e))) : b.data.forecasts && b.data.forecasts[0] && a.success({ forecast: b.data.forecasts[0] }) : a.fail({ errCode: b.data.infocode, errMsg: b.data.info });
      }, fail: function fail(b) {
        a.fail({ errCode: "0", errMsg: b.errMsg || "" });
      } });
  }function e(e) {
    wx.request({ url: "https://restapi.amap.com/v3/geocode/regeo", data: { key: b.key, location: e, extensions: "all", s: c.s, platform: c.platform, appname: b.key, sdkversion: c.sdkversion, logversion: c.logversion }, method: "GET", header: { "content-type": "application/json" }, success: function success(b) {
        var c, e;b.data.status && "1" == b.data.status ? (e = b.data.regeocode, e.addressComponent ? c = e.addressComponent.adcode : e.aois && e.aois.length > 0 && (c = e.aois[0].adcode), d(c)) : a.fail({ errCode: b.data.infocode, errMsg: b.data.info });
      }, fail: function fail(b) {
        a.fail({ errCode: "0", errMsg: b.errMsg || "" });
      } });
  }var b = this,
      c = b.requestConfig;a.city ? d(a.city) : b.getWxLocation(a, function (a) {
    e(a);
  });
}, AMapWX.prototype.getPoiAround = function (a) {
  function d(d) {
    var e = { key: b.key, location: d, s: c.s, platform: c.platform, appname: b.key, sdkversion: c.sdkversion, logversion: c.logversion };a.querytypes && (e["types"] = a.querytypes), a.querykeywords && (e["keywords"] = a.querykeywords), wx.request({ url: "https://restapi.amap.com/v3/place/around", data: e, method: "GET", header: { "content-type": "application/json" }, success: function success(b) {
        var c, d, e, f;if (b.data.status && "1" == b.data.status) {
          if (b = b.data, b && b.pois) {
            for (c = [], d = 0; d < b.pois.length; d++) {
              e = 0 == d ? a.iconPathSelected : a.iconPath, c.push({ latitude: parseFloat(b.pois[d].location.split(",")[1]), longitude: parseFloat(b.pois[d].location.split(",")[0]), iconPath: e, width: 22, height: 32, id: d, name: b.pois[d].name, address: b.pois[d].address });
            }f = { markers: c, poisData: b.pois }, a.success(f);
          }
        } else a.fail({ errCode: b.data.infocode, errMsg: b.data.info });
      }, fail: function fail(b) {
        a.fail({ errCode: "0", errMsg: b.errMsg || "" });
      } });
  }var b = this,
      c = b.requestConfig;a.location ? d(a.location) : b.getWxLocation(a, function (a) {
    d(a);
  });
}, AMapWX.prototype.getStaticmap = function (a) {
  function f(b) {
    c.push("location=" + b), a.zoom && c.push("zoom=" + a.zoom), a.size && c.push("size=" + a.size), a.scale && c.push("scale=" + a.scale), a.markers && c.push("markers=" + a.markers), a.labels && c.push("labels=" + a.labels), a.paths && c.push("paths=" + a.paths), a.traffic && c.push("traffic=" + a.traffic);var e = d + c.join("&");a.success({ url: e });
  }var e,
      b = this,
      c = [],
      d = "https://restapi.amap.com/v3/staticmap?";c.push("key=" + b.key), e = b.requestConfig, c.push("s=" + e.s), c.push("platform=" + e.platform), c.push("appname=" + e.appname), c.push("sdkversion=" + e.sdkversion), c.push("logversion=" + e.logversion), a.location ? f(a.location) : b.getWxLocation(a, function (a) {
    f(a);
  });
}, AMapWX.prototype.getInputtips = function (a) {
  var b = this,
      c = b.requestConfig,
      d = { key: b.key, s: c.s, platform: c.platform, appname: b.key, sdkversion: c.sdkversion, logversion: c.logversion };a.location && (d["location"] = a.location), a.keywords && (d["keywords"] = a.keywords), a.type && (d["type"] = a.type), a.city && (d["city"] = a.city), a.citylimit && (d["citylimit"] = a.citylimit), wx.request({ url: "https://restapi.amap.com/v3/assistant/inputtips", data: d, method: "GET", header: { "content-type": "application/json" }, success: function success(b) {
      b && b.data && b.data.tips && a.success({ tips: b.data.tips });
    }, fail: function fail(b) {
      a.fail({ errCode: "0", errMsg: b.errMsg || "" });
    } });
}, AMapWX.prototype.getDrivingRoute = function (a) {
  var b = this,
      c = b.requestConfig,
      d = { key: b.key, s: c.s, platform: c.platform, appname: b.key, sdkversion: c.sdkversion, logversion: c.logversion };a.origin && (d["origin"] = a.origin), a.destination && (d["destination"] = a.destination), a.strategy && (d["strategy"] = a.strategy), a.waypoints && (d["waypoints"] = a.waypoints), a.avoidpolygons && (d["avoidpolygons"] = a.avoidpolygons), a.avoidroad && (d["avoidroad"] = a.avoidroad), wx.request({ url: "https://restapi.amap.com/v3/direction/driving", data: d, method: "GET", header: { "content-type": "application/json" }, success: function success(b) {
      b && b.data && b.data.route && a.success({ paths: b.data.route.paths, taxi_cost: b.data.route.taxi_cost || "" });
    }, fail: function fail(b) {
      a.fail({ errCode: "0", errMsg: b.errMsg || "" });
    } });
}, AMapWX.prototype.getWalkingRoute = function (a) {
  var b = this,
      c = b.requestConfig,
      d = { key: b.key, s: c.s, platform: c.platform, appname: b.key, sdkversion: c.sdkversion, logversion: c.logversion };a.origin && (d["origin"] = a.origin), a.destination && (d["destination"] = a.destination), wx.request({ url: "https://restapi.amap.com/v3/direction/walking", data: d, method: "GET", header: { "content-type": "application/json" }, success: function success(b) {
      b && b.data && b.data.route && a.success({ paths: b.data.route.paths });
    }, fail: function fail(b) {
      a.fail({ errCode: "0", errMsg: b.errMsg || "" });
    } });
}, AMapWX.prototype.getTransitRoute = function (a) {
  var b = this,
      c = b.requestConfig,
      d = { key: b.key, s: c.s, platform: c.platform, appname: b.key, sdkversion: c.sdkversion, logversion: c.logversion };a.origin && (d["origin"] = a.origin), a.destination && (d["destination"] = a.destination), a.strategy && (d["strategy"] = a.strategy), a.city && (d["city"] = a.city), a.cityd && (d["cityd"] = a.cityd), wx.request({ url: "https://restapi.amap.com/v3/direction/transit/integrated", data: d, method: "GET", header: { "content-type": "application/json" }, success: function success(b) {
      if (b && b.data && b.data.route) {
        var c = b.data.route;a.success({ distance: c.distance || "", taxi_cost: c.taxi_cost || "", transits: c.transits });
      }
    }, fail: function fail(b) {
      a.fail({ errCode: "0", errMsg: b.errMsg || "" });
    } });
}, AMapWX.prototype.getRidingRoute = function (a) {
  var b = this,
      c = b.requestConfig,
      d = { key: b.key, s: c.s, platform: c.platform, appname: b.key, sdkversion: c.sdkversion, logversion: c.logversion };a.origin && (d["origin"] = a.origin), a.destination && (d["destination"] = a.destination), wx.request({ url: "https://restapi.amap.com/v4/direction/bicycling", data: d, method: "GET", header: { "content-type": "application/json" }, success: function success(b) {
      b && b.data && b.data.data && a.success({ paths: b.data.data.paths });
    }, fail: function fail(b) {
      a.fail({ errCode: "0", errMsg: b.errMsg || "" });
    } });
}, module.exports.AMapWX = AMapWX;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFtYXAtd3guanMiXSwibmFtZXMiOlsiQU1hcFdYIiwiYSIsImtleSIsInJlcXVlc3RDb25maWciLCJzIiwicGxhdGZvcm0iLCJhcHBuYW1lIiwic2RrdmVyc2lvbiIsImxvZ3ZlcnNpb24iLCJwcm90b3R5cGUiLCJnZXRXeExvY2F0aW9uIiwiYiIsInd4IiwiZ2V0TG9jYXRpb24iLCJ0eXBlIiwic3VjY2VzcyIsImMiLCJsb25naXR1ZGUiLCJsYXRpdHVkZSIsInNldFN0b3JhZ2UiLCJkYXRhIiwiZmFpbCIsImdldFN0b3JhZ2UiLCJlcnJDb2RlIiwiZXJyTXNnIiwiZ2V0UmVnZW8iLCJkIiwicmVxdWVzdCIsInVybCIsImxvY2F0aW9uIiwiZXh0ZW5zaW9ucyIsIm1ldGhvZCIsImhlYWRlciIsImUiLCJmIiwiZyIsImgiLCJpIiwiaiIsImsiLCJsIiwic3RhdHVzIiwicmVnZW9jb2RlIiwiYWRkcmVzc0NvbXBvbmVudCIsInJvYWRzIiwibmFtZSIsInNwbGl0IiwicG9pcyIsInBhcnNlRmxvYXQiLCJwcm92aWNlIiwicHVzaCIsImNpdHkiLCJkaXN0cmljdCIsInN0cmVldE51bWJlciIsInN0cmVldCIsIm51bWJlciIsImpvaW4iLCJpY29uUGF0aCIsIndpZHRoIiwiaWNvbldpZHRoIiwiaGVpZ2h0IiwiaWNvbkhlaWdodCIsImRlc2MiLCJpZCIsInJlZ2VvY29kZURhdGEiLCJpbmZvY29kZSIsImluZm8iLCJnZXRXZWF0aGVyIiwidGV4dCIsIndlYXRoZXIiLCJ0ZW1wZXJhdHVyZSIsIndpbmRkaXJlY3Rpb24iLCJ3aW5kcG93ZXIiLCJodW1pZGl0eSIsImxpdmVzIiwibGVuZ3RoIiwiZm9yZWNhc3RzIiwiZm9yZWNhc3QiLCJhZGNvZGUiLCJhb2lzIiwiZ2V0UG9pQXJvdW5kIiwicXVlcnl0eXBlcyIsInF1ZXJ5a2V5d29yZHMiLCJpY29uUGF0aFNlbGVjdGVkIiwiYWRkcmVzcyIsIm1hcmtlcnMiLCJwb2lzRGF0YSIsImdldFN0YXRpY21hcCIsInpvb20iLCJzaXplIiwic2NhbGUiLCJsYWJlbHMiLCJwYXRocyIsInRyYWZmaWMiLCJnZXRJbnB1dHRpcHMiLCJrZXl3b3JkcyIsImNpdHlsaW1pdCIsInRpcHMiLCJnZXREcml2aW5nUm91dGUiLCJvcmlnaW4iLCJkZXN0aW5hdGlvbiIsInN0cmF0ZWd5Iiwid2F5cG9pbnRzIiwiYXZvaWRwb2x5Z29ucyIsImF2b2lkcm9hZCIsInJvdXRlIiwidGF4aV9jb3N0IiwiZ2V0V2Fsa2luZ1JvdXRlIiwiZ2V0VHJhbnNpdFJvdXRlIiwiY2l0eWQiLCJkaXN0YW5jZSIsInRyYW5zaXRzIiwiZ2V0UmlkaW5nUm91dGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLFNBQVNBLE1BQVQsQ0FBZ0JDLENBQWhCLEVBQWtCO0FBQUMsT0FBS0MsR0FBTCxHQUFTRCxFQUFFQyxHQUFYLEVBQWUsS0FBS0MsYUFBTCxHQUFtQixFQUFDRCxLQUFJRCxFQUFFQyxHQUFQLEVBQVdFLEdBQUUsS0FBYixFQUFtQkMsVUFBUyxNQUE1QixFQUFtQ0MsU0FBUUwsRUFBRUMsR0FBN0MsRUFBaURLLFlBQVcsT0FBNUQsRUFBb0VDLFlBQVcsS0FBL0UsRUFBbEM7QUFBd0gsUUFBT0MsU0FBUCxDQUFpQkMsYUFBakIsR0FBK0IsVUFBU1QsQ0FBVCxFQUFXVSxDQUFYLEVBQWE7QUFBQ0MsS0FBR0MsV0FBSCxDQUFlLEVBQUNDLE1BQUssT0FBTixFQUFjQyxTQUFRLGlCQUFTZCxDQUFULEVBQVc7QUFBQyxVQUFJZSxJQUFFZixFQUFFZ0IsU0FBRixHQUFZLEdBQVosR0FBZ0JoQixFQUFFaUIsUUFBeEIsQ0FBaUNOLEdBQUdPLFVBQUgsQ0FBYyxFQUFDakIsS0FBSSxjQUFMLEVBQW9Ca0IsTUFBS0osQ0FBekIsRUFBZCxHQUEyQ0wsRUFBRUssQ0FBRixDQUEzQztBQUFnRCxLQUFuSCxFQUFvSEssTUFBSyxjQUFTTCxDQUFULEVBQVc7QUFBQ0osU0FBR1UsVUFBSCxDQUFjLEVBQUNwQixLQUFJLGNBQUwsRUFBb0JhLFNB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UyxJQUFGLENBQU9BLElBQWxCLElBQXdCbkIsRUFBRWMsT0FBRixDQUFVLEVBQUM2RSxPQUFNakYsRUFBRVMsSUFBRixDQUFPQSxJQUFQLENBQVl3RSxLQUFuQixFQUFWLENBQXhCO0FBQTZELEtBQXZNLEVBQXdNdkUsTUFBSyxjQUFTVixDQUFULEVBQVc7QUFBQ1YsUUFBRW9CLElBQUYsQ0FBTyxFQUFDRSxTQUFRLEdBQVQsRUFBYUMsUUFBT2IsRUFBRWEsTUFBRixJQUFVLEVBQTlCLEVBQVA7QUFBMEMsS0FBblEsRUFBWCxDQUFqRjtBQUFrVyxDQUFyMVAsRUFBczFQeUYsT0FBT0MsT0FBUCxDQUFlbEgsTUFBZixHQUFzQkEsTUFBNTJQIiwiZmlsZSI6ImFtYXAtd3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBBTWFwV1goYSl7dGhpcy5rZXk9YS5rZXksdGhpcy5yZXF1ZXN0Q29uZmlnPXtrZXk6YS5rZXksczpcInJzeFwiLHBsYXRmb3JtOlwiV1hKU1wiLGFwcG5hbWU6YS5rZXksc2RrdmVyc2lvbjpcIjEuMi4wXCIsbG9ndmVyc2lvbjpcIjIuMFwifX1BTWFwV1gucHJvdG90eXBlLmdldFd4TG9jYXRpb249ZnVuY3Rpb24oYSxiKXt3eC5nZXRMb2NhdGlvbih7dHlwZTpcImdjajAyXCIsc3VjY2VzczpmdW5jdGlvbihhKXt2YXIgYz1hLmxvbmdpdHVkZStcIixcIithLmxhdGl0dWRlO3d4LnNldFN0b3JhZ2Uoe2tleTpcInVzZXJMb2NhdGlvblwiLGRhdGE6Y30pLGIoYyl9LGZhaWw6ZnVuY3Rpb24oYyl7d3guZ2V0U3RvcmFnZSh7a2V5OlwidXNlckxvY2F0aW9uXCIsc3VjY2VzczpmdW5jdGlvbihhKXthLmRhdGEmJmIoYS5kYXRhKX19KSxhLmZhaWwoe2VyckNvZGU6XCIwXCIsZXJyTXNnOmMuZXJyTXNnfHxcIlwifSl9fSl9LEFNYXBXWC5wcm90b3R5cGUuZ2V0UmVnZW89ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYyhjKXt2YXIgZD1iLnJlcXVlc3RDb25maWc7d3gucmVxdWVzdCh7dXJsOlwiaHR0cHM6Ly9yZXN0YXBpLmFtYXAuY29tL3YzL2dlb2NvZGUvcmVnZW9cIixkYXRhOntrZXk6Yi5rZXksbG9jYXRpb246YyxleHRlbnNpb25zOlwiYWxsXCIsczpkLnMscGxhdGZvcm06ZC5wbGF0Zm9ybSxhcHBuYW1lOmIua2V5LHNka3ZlcnNpb246ZC5zZGt2ZXJzaW9uLGxvZ3ZlcnNpb246ZC5sb2d2ZXJzaW9ufSxtZXRob2Q6XCJHRVRcIixoZWFkZXI6e1wiY29udGVudC10eXBlXCI6XCJhcHBsaWNhdGlvbi9qc29uXCJ9LHN1Y2Nlc3M6ZnVuY3Rpb24oYil7dmFyIGQsZSxmLGcsaCxpLGosayxsO2IuZGF0YS5zdGF0dXMmJlwiMVwiPT1iLmRhdGEuc3RhdHVzPyhkPWIuZGF0YS5yZWdlb2NvZGUsZT1kLmFkZHJlc3NDb21wb25lbnQsZj1bXSxnPVwiXCIsZCYmZC5yb2Fkc1swXSYmZC5yb2Fkc1swXS5uYW1lJiYoZz1kLnJvYWRzWzBdLm5hbWUrXCLpmYTov5FcIiksaD1jLnNwbGl0KFwiLFwiKVswXSxpPWMuc3BsaXQoXCIsXCIpWzFdLGQucG9pcyYmZC5wb2lzWzBdJiYoZz1kLnBvaXNbMF0ubmFtZStcIumZhOi/kVwiLGo9ZC5wb2lzWzBdLmxvY2F0aW9uLGomJihoPXBhcnNlRmxvYXQoai5zcGxpdChcIixcIilbMF0pLGk9cGFyc2VGbG9hdChqLnNwbGl0KFwiLFwiKVsxXSkpKSxlLnByb3ZpY2UmJmYucHVzaChlLnByb3ZpY2UpLGUuY2l0eSYmZi5wdXNoKGUuY2l0eSksZS5kaXN0cmljdCYmZi5wdXNoKGUuZGlzdHJpY3QpLGUuc3RyZWV0TnVtYmVyJiZlLnN0cmVldE51bWJlci5zdHJlZXQmJmUuc3RyZWV0TnVtYmVyLm51bWJlcj8oZi5wdXNoKGUuc3RyZWV0TnVtYmVyLnN0cmVldCksZi5wdXNoKGUuc3RyZWV0TnVtYmVyLm51bWJlcikpOihrPVwiXCIsZCYmZC5yb2Fkc1swXSYmZC5yb2Fkc1swXS5uYW1lJiYoaz1kLnJvYWRzWzBdLm5hbWUpLGYucHVzaChrKSksZj1mLmpvaW4oXCJcIiksbD1be2ljb25QYXRoOmEuaWNvblBhdGgsd2lkdGg6YS5pY29uV2lkdGgsaGVpZ2h0OmEuaWNvbkhlaWdodCxuYW1lOmYsZGVzYzpnLGxvbmdpdHVkZTpoLGxhdGl0dWRlOmksaWQ6MCxyZWdlb2NvZGVEYXRhOmR9XSxhLnN1Y2Nlc3MobCkpOmEuZmFpbCh7ZXJyQ29kZTpiLmRhdGEuaW5mb2NvZGUsZXJyTXNnOmIuZGF0YS5pbmZvfSl9LGZhaWw6ZnVuY3Rpb24oYil7YS5mYWlsKHtlcnJDb2RlOlwiMFwiLGVyck1zZzpiLmVyck1zZ3x8XCJcIn0pfX0pfXZhciBiPXRoaXM7YS5sb2NhdGlvbj9jKGEubG9jYXRpb24pOmIuZ2V0V3hMb2NhdGlvbihhLGZ1bmN0aW9uKGEpe2MoYSl9KX0sQU1hcFdYLnByb3RvdHlwZS5nZXRXZWF0aGVyPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGQoZCl7dmFyIGU9XCJiYXNlXCI7YS50eXBlJiZcImZvcmVjYXN0XCI9PWEudHlwZSYmKGU9XCJhbGxcIiksd3gucmVxdWVzdCh7dXJsOlwiaHR0cHM6Ly9yZXN0YXBpLmFtYXAuY29tL3YzL3dlYXRoZXIvd2VhdGhlckluZm9cIixkYXRhOntrZXk6Yi5rZXksY2l0eTpkLGV4dGVuc2lvbnM6ZSxzOmMucyxwbGF0Zm9ybTpjLnBsYXRmb3JtLGFwcG5hbWU6Yi5rZXksc2RrdmVyc2lvbjpjLnNka3ZlcnNpb24sbG9ndmVyc2lvbjpjLmxvZ3ZlcnNpb259LG1ldGhvZDpcIkdFVFwiLGhlYWRlcjp7XCJjb250ZW50LXR5cGVcIjpcImFwcGxpY2F0aW9uL2pzb25cIn0sc3VjY2VzczpmdW5jdGlvbihiKXtmdW5jdGlvbiBjKGEpe3ZhciBiPXtjaXR5Ont0ZXh0Olwi5Z+O5biCXCIsZGF0YTphLmNpdHl9LHdlYXRoZXI6e3RleHQ6XCLlpKnmsJRcIixkYXRhOmEud2VhdGhlcn0sdGVtcGVyYXR1cmU6e3RleHQ6XCLmuKnluqZcIixkYXRhOmEudGVtcGVyYXR1cmV9LHdpbmRkaXJlY3Rpb246e3RleHQ6XCLpo47lkJFcIixkYXRhOmEud2luZGRpcmVjdGlvbitcIumjjlwifSx3aW5kcG93ZXI6e3RleHQ6XCLpo47liptcIixkYXRhOmEud2luZHBvd2VyK1wi57qnXCJ9LGh1bWlkaXR5Ont0ZXh0Olwi5rm/5bqmXCIsZGF0YTphLmh1bWlkaXR5K1wiJVwifX07cmV0dXJuIGJ9dmFyIGQsZTtiLmRhdGEuc3RhdHVzJiZcIjFcIj09Yi5kYXRhLnN0YXR1cz9iLmRhdGEubGl2ZXM/KGQ9Yi5kYXRhLmxpdmVzLGQmJmQubGVuZ3RoPjAmJihkPWRbMF0sZT1jKGQpLGVbXCJsaXZlRGF0YVwiXT1kLGEuc3VjY2VzcyhlKSkpOmIuZGF0YS5mb3JlY2FzdHMmJmIuZGF0YS5mb3JlY2FzdHNbMF0mJmEuc3VjY2Vzcyh7Zm9yZWNhc3Q6Yi5kYXRhLmZvcmVjYXN0c1swXX0pOmEuZmFpbCh7ZXJyQ29kZTpiLmRhdGEuaW5mb2NvZGUsZXJyTXNnOmIuZGF0YS5pbmZvfSl9LGZhaWw6ZnVuY3Rpb24oYil7YS5mYWlsKHtlcnJDb2RlOlwiMFwiLGVyck1zZzpiLmVyck1zZ3x8XCJcIn0pfX0pfWZ1bmN0aW9uIGUoZSl7d3gucmVxdWVzdCh7dXJsOlwiaHR0cHM6Ly9yZXN0YXBpLmFtYXAuY29tL3YzL2dlb2NvZGUvcmVnZW9cIixkYXRhOntrZXk6Yi5rZXksbG9jYXRpb246ZSxleHRlbnNpb25zOlwiYWxsXCIsczpjLnMscGxhdGZvcm06Yy5wbGF0Zm9ybSxhcHBuYW1lOmIua2V5LHNka3ZlcnNpb246Yy5zZGt2ZXJzaW9uLGxvZ3ZlcnNpb246Yy5sb2d2ZXJzaW9ufSxtZXRob2Q6XCJHRVRcIixoZWFkZXI6e1wiY29udGVudC10eXBlXCI6XCJhcHBsaWNhdGlvbi9qc29uXCJ9LHN1Y2Nlc3M6ZnVuY3Rpb24oYil7dmFyIGMsZTtiLmRhdGEuc3RhdHVzJiZcIjFcIj09Yi5kYXRhLnN0YXR1cz8oZT1iLmRhdGEucmVnZW9jb2RlLGUuYWRkcmVzc0NvbXBvbmVudD9jPWUuYWRkcmVzc0NvbXBvbmVudC5hZGNvZGU6ZS5hb2lzJiZlLmFvaXMubGVuZ3RoPjAmJihjPWUuYW9pc1swXS5hZGNvZGUpLGQoYykpOmEuZmFpbCh7ZXJyQ29kZTpiLmRhdGEuaW5mb2NvZGUsZXJyTXNnOmIuZGF0YS5pbmZvfSl9LGZhaWw6ZnVuY3Rpb24oYil7YS5mYWlsKHtlcnJDb2RlOlwiMFwiLGVyck1zZzpiLmVyck1zZ3x8XCJcIn0pfX0pfXZhciBiPXRoaXMsYz1iLnJlcXVlc3RDb25maWc7YS5jaXR5P2QoYS5jaXR5KTpiLmdldFd4TG9jYXRpb24oYSxmdW5jdGlvbihhKXtlKGEpfSl9LEFNYXBXWC5wcm90b3R5cGUuZ2V0UG9pQXJvdW5kPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGQoZCl7dmFyIGU9e2tleTpiLmtleSxsb2NhdGlvbjpkLHM6Yy5zLHBsYXRmb3JtOmMucGxhdGZvcm0sYXBwbmFtZTpiLmtleSxzZGt2ZXJzaW9uOmMuc2RrdmVyc2lvbixsb2d2ZXJzaW9uOmMubG9ndmVyc2lvbn07YS5xdWVyeXR5cGVzJiYoZVtcInR5cGVzXCJdPWEucXVlcnl0eXBlcyksYS5xdWVyeWtleXdvcmRzJiYoZVtcImtleXdvcmRzXCJdPWEucXVlcnlrZXl3b3Jkcyksd3gucmVxdWVzdCh7dXJsOlwiaHR0cHM6Ly9yZXN0YXBpLmFtYXAuY29tL3YzL3BsYWNlL2Fyb3VuZFwiLGRhdGE6ZSxtZXRob2Q6XCJHRVRcIixoZWFkZXI6e1wiY29udGVudC10eXBlXCI6XCJhcHBsaWNhdGlvbi9qc29uXCJ9LHN1Y2Nlc3M6ZnVuY3Rpb24oYil7dmFyIGMsZCxlLGY7aWYoYi5kYXRhLnN0YXR1cyYmXCIxXCI9PWIuZGF0YS5zdGF0dXMpe2lmKGI9Yi5kYXRhLGImJmIucG9pcyl7Zm9yKGM9W10sZD0wO2Q8Yi5wb2lzLmxlbmd0aDtkKyspZT0wPT1kP2EuaWNvblBhdGhTZWxlY3RlZDphLmljb25QYXRoLGMucHVzaCh7bGF0aXR1ZGU6cGFyc2VGbG9hdChiLnBvaXNbZF0ubG9jYXRpb24uc3BsaXQoXCIsXCIpWzFdKSxsb25naXR1ZGU6cGFyc2VGbG9hdChiLnBvaXNbZF0ubG9jYXRpb24uc3BsaXQoXCIsXCIpWzBdKSxpY29uUGF0aDplLHdpZHRoOjIyLGhlaWdodDozMixpZDpkLG5hbWU6Yi5wb2lzW2RdLm5hbWUsYWRkcmVzczpiLnBvaXNbZF0uYWRkcmVzc30pO2Y9e21hcmtlcnM6Yyxwb2lzRGF0YTpiLnBvaXN9LGEuc3VjY2VzcyhmKX19ZWxzZSBhLmZhaWwoe2VyckNvZGU6Yi5kYXRhLmluZm9jb2RlLGVyck1zZzpiLmRhdGEuaW5mb30pfSxmYWlsOmZ1bmN0aW9uKGIpe2EuZmFpbCh7ZXJyQ29kZTpcIjBcIixlcnJNc2c6Yi5lcnJNc2d8fFwiXCJ9KX19KX12YXIgYj10aGlzLGM9Yi5yZXF1ZXN0Q29uZmlnO2EubG9jYXRpb24/ZChhLmxvY2F0aW9uKTpiLmdldFd4TG9jYXRpb24oYSxmdW5jdGlvbihhKXtkKGEpfSl9LEFNYXBXWC5wcm90b3R5cGUuZ2V0U3RhdGljbWFwPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGYoYil7Yy5wdXNoKFwibG9jYXRpb249XCIrYiksYS56b29tJiZjLnB1c2goXCJ6b29tPVwiK2Euem9vbSksYS5zaXplJiZjLnB1c2goXCJzaXplPVwiK2Euc2l6ZSksYS5zY2FsZSYmYy5wdXNoKFwic2NhbGU9XCIrYS5zY2FsZSksYS5tYXJrZXJzJiZjLnB1c2goXCJtYXJrZXJzPVwiK2EubWFya2VycyksYS5sYWJlbHMmJmMucHVzaChcImxhYmVscz1cIithLmxhYmVscyksYS5wYXRocyYmYy5wdXNoKFwicGF0aHM9XCIrYS5wYXRocyksYS50cmFmZmljJiZjLnB1c2goXCJ0cmFmZmljPVwiK2EudHJhZmZpYyk7dmFyIGU9ZCtjLmpvaW4oXCImXCIpO2Euc3VjY2Vzcyh7dXJsOmV9KX12YXIgZSxiPXRoaXMsYz1bXSxkPVwiaHR0cHM6Ly9yZXN0YXBpLmFtYXAuY29tL3YzL3N0YXRpY21hcD9cIjtjLnB1c2goXCJrZXk9XCIrYi5rZXkpLGU9Yi5yZXF1ZXN0Q29uZmlnLGMucHVzaChcInM9XCIrZS5zKSxjLnB1c2goXCJwbGF0Zm9ybT1cIitlLnBsYXRmb3JtKSxjLnB1c2goXCJhcHBuYW1lPVwiK2UuYXBwbmFtZSksYy5wdXNoKFwic2RrdmVyc2lvbj1cIitlLnNka3ZlcnNpb24pLGMucHVzaChcImxvZ3ZlcnNpb249XCIrZS5sb2d2ZXJzaW9uKSxhLmxvY2F0aW9uP2YoYS5sb2NhdGlvbik6Yi5nZXRXeExvY2F0aW9uKGEsZnVuY3Rpb24oYSl7ZihhKX0pfSxBTWFwV1gucHJvdG90eXBlLmdldElucHV0dGlwcz1mdW5jdGlvbihhKXt2YXIgYj10aGlzLGM9Yi5yZXF1ZXN0Q29uZmlnLGQ9e2tleTpiLmtleSxzOmMucyxwbGF0Zm9ybTpjLnBsYXRmb3JtLGFwcG5hbWU6Yi5rZXksc2RrdmVyc2lvbjpjLnNka3ZlcnNpb24sbG9ndmVyc2lvbjpjLmxvZ3ZlcnNpb259O2EubG9jYXRpb24mJihkW1wibG9jYXRpb25cIl09YS5sb2NhdGlvbiksYS5rZXl3b3JkcyYmKGRbXCJrZXl3b3Jkc1wiXT1hLmtleXdvcmRzKSxhLnR5cGUmJihkW1widHlwZVwiXT1hLnR5cGUpLGEuY2l0eSYmKGRbXCJjaXR5XCJdPWEuY2l0eSksYS5jaXR5bGltaXQmJihkW1wiY2l0eWxpbWl0XCJdPWEuY2l0eWxpbWl0KSx3eC5yZXF1ZXN0KHt1cmw6XCJodHRwczovL3Jlc3RhcGkuYW1hcC5jb20vdjMvYXNzaXN0YW50L2lucHV0dGlwc1wiLGRhdGE6ZCxtZXRob2Q6XCJHRVRcIixoZWFkZXI6e1wiY29udGVudC10eXBlXCI6XCJhcHBsaWNhdGlvbi9qc29uXCJ9LHN1Y2Nlc3M6ZnVuY3Rpb24oYil7YiYmYi5kYXRhJiZiLmRhdGEudGlwcyYmYS5zdWNjZXNzKHt0aXBzOmIuZGF0YS50aXBzfSl9LGZhaWw6ZnVuY3Rpb24oYil7YS5mYWlsKHtlcnJDb2RlOlwiMFwiLGVyck1zZzpiLmVyck1zZ3x8XCJcIn0pfX0pfSxBTWFwV1gucHJvdG90eXBlLmdldERyaXZpbmdSb3V0ZT1mdW5jdGlvbihhKXt2YXIgYj10aGlzLGM9Yi5yZXF1ZXN0Q29uZmlnLGQ9e2tleTpiLmtleSxzOmMucyxwbGF0Zm9ybTpjLnBsYXRmb3JtLGFwcG5hbWU6Yi5rZXksc2RrdmVyc2lvbjpjLnNka3ZlcnNpb24sbG9ndmVyc2lvbjpjLmxvZ3ZlcnNpb259O2Eub3JpZ2luJiYoZFtcIm9yaWdpblwiXT1hLm9yaWdpbiksYS5kZXN0aW5hdGlvbiYmKGRbXCJkZXN0aW5hdGlvblwiXT1hLmRlc3RpbmF0aW9uKSxhLnN0cmF0ZWd5JiYoZFtcInN0cmF0ZWd5XCJdPWEuc3RyYXRlZ3kpLGEud2F5cG9pbnRzJiYoZFtcIndheXBvaW50c1wiXT1hLndheXBvaW50cyksYS5hdm9pZHBvbHlnb25zJiYoZFtcImF2b2lkcG9seWdvbnNcIl09YS5hdm9pZHBvbHlnb25zKSxhLmF2b2lkcm9hZCYmKGRbXCJhdm9pZHJvYWRcIl09YS5hdm9pZHJvYWQpLHd4LnJlcXVlc3Qoe3VybDpcImh0dHBzOi8vcmVzdGFwaS5hbWFwLmNvbS92My9kaXJlY3Rpb24vZHJpdmluZ1wiLGRhdGE6ZCxtZXRob2Q6XCJHRVRcIixoZWFkZXI6e1wiY29udGVudC10eXBlXCI6XCJhcHBsaWNhdGlvbi9qc29uXCJ9LHN1Y2Nlc3M6ZnVuY3Rpb24oYil7YiYmYi5kYXRhJiZiLmRhdGEucm91dGUmJmEuc3VjY2Vzcyh7cGF0aHM6Yi5kYXRhLnJvdXRlLnBhdGhzLHRheGlfY29zdDpiLmRhdGEucm91dGUudGF4aV9jb3N0fHxcIlwifSl9LGZhaWw6ZnVuY3Rpb24oYil7YS5mYWlsKHtlcnJDb2RlOlwiMFwiLGVyck1zZzpiLmVyck1zZ3x8XCJcIn0pfX0pfSxBTWFwV1gucHJvdG90eXBlLmdldFdhbGtpbmdSb3V0ZT1mdW5jdGlvbihhKXt2YXIgYj10aGlzLGM9Yi5yZXF1ZXN0Q29uZmlnLGQ9e2tleTpiLmtleSxzOmMucyxwbGF0Zm9ybTpjLnBsYXRmb3JtLGFwcG5hbWU6Yi5rZXksc2RrdmVyc2lvbjpjLnNka3ZlcnNpb24sbG9ndmVyc2lvbjpjLmxvZ3ZlcnNpb259O2Eub3JpZ2luJiYoZFtcIm9yaWdpblwiXT1hLm9yaWdpbiksYS5kZXN0aW5hdGlvbiYmKGRbXCJkZXN0aW5hdGlvblwiXT1hLmRlc3RpbmF0aW9uKSx3eC5yZXF1ZXN0KHt1cmw6XCJodHRwczovL3Jlc3RhcGkuYW1hcC5jb20vdjMvZGlyZWN0aW9uL3dhbGtpbmdcIixkYXRhOmQsbWV0aG9kOlwiR0VUXCIsaGVhZGVyOntcImNvbnRlbnQtdHlwZVwiOlwiYXBwbGljYXRpb24vanNvblwifSxzdWNjZXNzOmZ1bmN0aW9uKGIpe2ImJmIuZGF0YSYmYi5kYXRhLnJvdXRlJiZhLnN1Y2Nlc3Moe3BhdGhzOmIuZGF0YS5yb3V0ZS5wYXRoc30pfSxmYWlsOmZ1bmN0aW9uKGIpe2EuZmFpbCh7ZXJyQ29kZTpcIjBcIixlcnJNc2c6Yi5lcnJNc2d8fFwiXCJ9KX19KX0sQU1hcFdYLnByb3RvdHlwZS5nZXRUcmFuc2l0Um91dGU9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcyxjPWIucmVxdWVzdENvbmZpZyxkPXtrZXk6Yi5rZXksczpjLnMscGxhdGZvcm06Yy5wbGF0Zm9ybSxhcHBuYW1lOmIua2V5LHNka3ZlcnNpb246Yy5zZGt2ZXJzaW9uLGxvZ3ZlcnNpb246Yy5sb2d2ZXJzaW9ufTthLm9yaWdpbiYmKGRbXCJvcmlnaW5cIl09YS5vcmlnaW4pLGEuZGVzdGluYXRpb24mJihkW1wiZGVzdGluYXRpb25cIl09YS5kZXN0aW5hdGlvbiksYS5zdHJhdGVneSYmKGRbXCJzdHJhdGVneVwiXT1hLnN0cmF0ZWd5KSxhLmNpdHkmJihkW1wiY2l0eVwiXT1hLmNpdHkpLGEuY2l0eWQmJihkW1wiY2l0eWRcIl09YS5jaXR5ZCksd3gucmVxdWVzdCh7dXJsOlwiaHR0cHM6Ly9yZXN0YXBpLmFtYXAuY29tL3YzL2RpcmVjdGlvbi90cmFuc2l0L2ludGVncmF0ZWRcIixkYXRhOmQsbWV0aG9kOlwiR0VUXCIsaGVhZGVyOntcImNvbnRlbnQtdHlwZVwiOlwiYXBwbGljYXRpb24vanNvblwifSxzdWNjZXNzOmZ1bmN0aW9uKGIpe2lmKGImJmIuZGF0YSYmYi5kYXRhLnJvdXRlKXt2YXIgYz1iLmRhdGEucm91dGU7YS5zdWNjZXNzKHtkaXN0YW5jZTpjLmRpc3RhbmNlfHxcIlwiLHRheGlfY29zdDpjLnRheGlfY29zdHx8XCJcIix0cmFuc2l0czpjLnRyYW5zaXRzfSl9fSxmYWlsOmZ1bmN0aW9uKGIpe2EuZmFpbCh7ZXJyQ29kZTpcIjBcIixlcnJNc2c6Yi5lcnJNc2d8fFwiXCJ9KX19KX0sQU1hcFdYLnByb3RvdHlwZS5nZXRSaWRpbmdSb3V0ZT1mdW5jdGlvbihhKXt2YXIgYj10aGlzLGM9Yi5yZXF1ZXN0Q29uZmlnLGQ9e2tleTpiLmtleSxzOmMucyxwbGF0Zm9ybTpjLnBsYXRmb3JtLGFwcG5hbWU6Yi5rZXksc2RrdmVyc2lvbjpjLnNka3ZlcnNpb24sbG9ndmVyc2lvbjpjLmxvZ3ZlcnNpb259O2Eub3JpZ2luJiYoZFtcIm9yaWdpblwiXT1hLm9yaWdpbiksYS5kZXN0aW5hdGlvbiYmKGRbXCJkZXN0aW5hdGlvblwiXT1hLmRlc3RpbmF0aW9uKSx3eC5yZXF1ZXN0KHt1cmw6XCJodHRwczovL3Jlc3RhcGkuYW1hcC5jb20vdjQvZGlyZWN0aW9uL2JpY3ljbGluZ1wiLGRhdGE6ZCxtZXRob2Q6XCJHRVRcIixoZWFkZXI6e1wiY29udGVudC10eXBlXCI6XCJhcHBsaWNhdGlvbi9qc29uXCJ9LHN1Y2Nlc3M6ZnVuY3Rpb24oYil7YiYmYi5kYXRhJiZiLmRhdGEuZGF0YSYmYS5zdWNjZXNzKHtwYXRoczpiLmRhdGEuZGF0YS5wYXRoc30pfSxmYWlsOmZ1bmN0aW9uKGIpe2EuZmFpbCh7ZXJyQ29kZTpcIjBcIixlcnJNc2c6Yi5lcnJNc2d8fFwiXCJ9KX19KX0sbW9kdWxlLmV4cG9ydHMuQU1hcFdYPUFNYXBXWDsiXX0=